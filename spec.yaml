
openapi: 3.0.0
info:
  title: A/B Smartly Collector
  version: 1.0.0
  description: A/B Smartly Collector API Specification
  contact:
    email: api@absmartly.com
  license:
    name: Proprietary
externalDocs:
  description: Find out more about A/B Smartly
  url: 'https://www.absmartly.com'
servers:
  - url: 'https://sandbox.absmartly.com/v1'
security:
  - ApiKey: []
tags:
  - name: context
    description: Context API
  - name: experiment
    description: Experiment API
paths:
  /healthy:
    get:
      tags:
        - collector
      security: []
      summary: Check if service is healthy
      operationId: collectorHealthCheck
      responses:
        200:
          description: Server is healhty
        500:
          description: Server is not healhty
  /context:
    get:
      tags:
        - context
      security: []
      summary: Get context experiment data for application
      operationId: contextGet
      parameters:
        - name: environment
          in: query
          required: false
          schema:
            type: string
        - name: application
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextGetResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - context
      summary: Create a new context with experiment assignments
      operationId: contextCreate
      parameters:
        - name: X-Agent
          in: header
          required: true
          schema:
            type: string
        - name: X-Environment
          in: header
          required: true
          schema:
            type: string
        - name: X-Application
          in: header
          required: true
          schema:
            type: string
        - name: X-Application-Version
          in: header
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: >-
          Unit and application information to create the context and assignments
          for
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - context
      summary: Publish experiment events for context
      operationId: contextPublish
      parameters:
        - name: X-Agent
          in: header
          required: true
          schema:
            type: string
        - name: X-Environment
          in: header
          required: true
          schema:
            type: string
        - name: X-Application
          in: header
          required: false
          schema:
            type: string
        - name: X-Application-Version
          in: header
          required: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The request information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
        401:
          description: Unauthorized
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /context/batch:
    put:
      tags:
        - context
        - batch
      summary: Publish experiment events for multiple contexts
      operationId: contextPublishBatch
      parameters:
        - name: X-Agent
          in: header
          required: true
          schema:
            type: string
        - name: X-Environment
          in: header
          required: true
          schema:
            type: string
        - name: X-Application
          in: header
          required: false
          schema:
            type: string
        - name: X-Application-Version
          in: header
          required: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The request information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishBatchRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResponse'
        401:
          description: Unauthorized
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /experiment:
    get:
      tags:
        - experiment
      operationId: experimentGet
      parameters:
        - name: X-Agent
          in: header
          required: true
          schema:
            type: string
        - name: X-Environment
          in: header
          required: true
          schema:
            type: string
        - name: X-Application
          in: header
          required: true
          schema:
            type: string
        - name: X-Application-Version
          in: header
          required: true
          schema:
            type: integer
            format: int64
      summary: Get information about currently running experiments
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentsResponse'
        401:
          description: Unauthorized
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ExperimentAssignment:
      type: object
      required:
        - id
        - iteration
        - name
        - variant
        - eligible
        - config
      properties:
        id:
          type: integer
          format: int32
          minimum: 0
          example: 3
        iteration:
          type: integer
          format: int32
          minimum: 0
          example: 2
        name:
          type: string
          example: exp_banner_color
        variant:
          type: integer
          format: int32
          minimum: 0
          maximum: 127
          example: 1
        eligible:
          type: boolean
          example: true
        audienceMismatch:
          type: boolean
          example: false
        originalVariant:
          type: integer
          format: int32
          minimum: 0
          maximum: 127
          example: 1
        config:
          type: string
          nullable: true
    Unit:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          example: session_id
        uid:
          type: string
          minLength: 1
          maxLength: 640
          example: 4a42766ca6313d26f49985e799ff4f3790fb86efa0fce46edb3ea8fbf1ea3408
    Exposure:
      type: object
      required:
        - id
        - name
        - variant
        - exposedAt
        - assigned
        - eligible
      properties:
        id:
          type: integer
          format: int32
          minimum: 0
          example: 3
        name:
          type: string
          example: exp_banner_color
        unit:
          type: string
          nullable: true
          example: session_id
        variant:
          type: integer
          format: int32
          minimum: 0
          maximum: 128
          example: 1
        exposedAt:
          type: integer
          format: int64
          example: 1609244179528
        assigned:
          type: boolean
          example: true
        eligible:
          type: boolean
          example: true
        overridden:
          type: boolean
          example: false
        fullOn:
          type: boolean
          example: false
        custom:
          type: boolean
          example: false
        audienceMismatch:
          type: boolean
          example: false
    GoalAchievement:
      type: object
      required:
        - name
        - achievedAt
      properties:
        name:
          type: string
          example: banner_click
        achievedAt:
          type: integer
          format: int64
          example: 1609254179528
        properties:
          type: object
          nullable: true
    Attribute:
      type: object
      required:
        - name
        - setAt
      properties:
        name:
          type: string
          example: age
        value:
          example: 39
          nullable: true
        setAt:
          type: integer
          format: int64
          example: 1609244179528
    Experiment:
      type: object
      required:
        - id
        - name
        - iteration
        - split
        - trafficSplit
        - variants
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: exp_banner_color
        iteration:
          type: integer
          example: 0
        split:
          type: array
          items:
            type: number
            format: double
          example: [0.5,0.5]
        trafficSplit:
          type: array
          items:
            type: number
            format: double
          example: [0.0,1.0]
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentVariant'
    ExperimentVariant:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: treatment
        config:
          type: string
          nullable: true
          example: "{\"color\":\"red\"}"
    ContextRequest:
      type: object
      required:
        - units
      properties:
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
    ContextResponse:
      type: object
      required:
        - units
        - assignments
      properties:
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentAssignment'
    ContextGetResponse:
      type: object
      required:
        - experiments
      properties:
        experiments:
          type: array
          items:
            $ref: '#/components/schemas/ContextExperiment'
    ContextExperiment:
      type: object
      required:
        - id
        - name
        - iteration
        - unitType
        - environment
        - seed
        - split
        - trafficSeed
        - trafficSplit
        - fullOnVariant
        - applications
        - variants
        - audience
        - audienceStrict
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: exp_banner_color
        iteration:
          type: integer
          example: 0
        unitType:
          type: string
          example: session_id
        environment:
          type: string
          example: production
        seed:
          type: integer
          format: int64
          example: 9453674179528
        split:
          type: array
          items:
            type: number
            format: double
          example: [0.5,0.5]
        trafficSeed:
          type: integer
          format: int64
          example: -56241591889905
        trafficSplit:
          type: array
          items:
            type: number
            format: double
          example: [0.0,1.0]
        fullOnVariant:
          type: integer
          format: int32
          minimum: 0
          maximum: 127
          example: 1
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentApplication'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ExperimentVariant'
        audience:
          type: string
          example: '{ "filter": [{ "gt": [{ "var": "age" }, { "value": 20 }] }] }'
        audienceStrict:
          type: boolean
          example: false
    ExperimentApplication:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: website
    PublishRequest:
      type: object
      required:
        - units
        - publishedAt
      properties:
        hashed:
          type: boolean
          nullable: true
          default: false
        historic:
          type: boolean
          nullable: true
          default: false
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        exposures:
          type: array
          items:
            $ref: '#/components/schemas/Exposure'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/GoalAchievement'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    PublishResponseMessage:
      type: object
      required:
        - batchIndex
        - eventIndex
        - subject
        - message
      properties:
        batchIndex:
          type: integer
        eventIndex:
          type: integer
        subject:
          type: string
        message:
          type: string
    PublishResponse:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/PublishResponseMessage'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/PublishResponseMessage'
    PublishBatchRequest:
      type: object
      required:
        - requests
      properties:
        requests:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/PublishRequest'
    ExperimentsResponse:
      type: object
      required:
        - ok
        - experiments
      properties:
        experiments:
          type: array
          items:
            $ref: '#/components/schemas/Experiment'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-API-Key
      in: header
